// <auto-generated />
using ExpenseApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseApp.Migrations
{
    [DbContext(typeof(ExpenseContext))]
    partial class ExpenseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpenseApp.Models.ExpenseFormModel", b =>
                {
                    b.Property<string>("ExpenseName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Spent")
                        .HasColumnType("money");

                    b.HasKey("ExpenseName", "GroupName");

                    b.HasIndex("GroupName");

                    b.ToTable("EXPexpense");
                });

            modelBuilder.Entity("ExpenseApp.Models.ExpenseGroupModel", b =>
                {
                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Budget")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupID"));

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupName");

                    b.HasIndex("CreatedBy");

                    b.ToTable("EXPgroupmaster");
                });

            modelBuilder.Entity("ExpenseApp.Models.ExpenseMasterModel", b =>
                {
                    b.Property<string>("ExpenseName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ExpenseID"));

                    b.Property<string>("ExpenseType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseName");

                    b.ToTable("EXPexpensemaster");
                });

            modelBuilder.Entity("ExpenseApp.Models.ExpenseMemberMasterModel", b =>
                {
                    b.Property<string>("Groupname")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Membersname")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Contributionamaount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Groupname", "Membersname");

                    b.ToTable("EXPmembermaster");
                });

            modelBuilder.Entity("ExpenseApp.Models.UserMaster", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Mobilenumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Username");

                    b.ToTable("EXPusermaster");
                });

            modelBuilder.Entity("ExpenseApp.Models.ExpenseFormModel", b =>
                {
                    b.HasOne("ExpenseApp.Models.ExpenseMasterModel", null)
                        .WithMany()
                        .HasForeignKey("ExpenseName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ExpenseApp.Models.ExpenseGroupModel", null)
                        .WithMany()
                        .HasForeignKey("GroupName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpenseApp.Models.ExpenseGroupModel", b =>
                {
                    b.HasOne("ExpenseApp.Models.UserMaster", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
